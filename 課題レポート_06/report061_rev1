% [定理 ２５] ----------------------------------------------------------;
% △ABCの頂点A,B,Cから直線gに降ろした垂線の足をA,E,Fとすると、
% 点D,E,FからそれぞれBC, CA, ABにおろした垂線DP,EQ,FRは一点で交わる
% ※直線gをx軸と一致するものとみなして証明していく
% A(u1, u2) B(u3, u4) C(u5, u6) D(u1, 0) E(u3, 0) F(u5, 0)
% P(x1, x2) Q(x3, x4) R(x5, x6)
% P(x1, u7) Q(x2, u8) R(x3, u9)
%----------------------------------------------------------------------;

% 関数定義読み込み） ----------------------------------------------------;

load_package groebner;
on comp,gcd,ezgcd;
off allfac,pwrds;

in cal_sys_relations$


% ２点間のユークリッド距離D^2 -----------------------------------------------;
procedure squared_euclid(a1,a2,b1,b2)$
begin
 scalar d;
 d:=(a1-b1)^2+(a2-b2)^2;
 return d
end$
%----------------------------------------------------------------------;


% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

order x3, x2, x1, u9, u8, u7, u6, u5, u4, u3, u2, u1;
factor x3, x2, x1;

%----------------------------------------------------------------------;
% 仮定 ----------------------------------------------------------------;

% DP, EQ, FRの共点を言うためには、§６例３により、
% DB^2 - DC^2 + EC^2 -EA^2 + FA^2 -FB^2 = 0 を示せれば良い

% DP⊥BC かつ　B-P-Cは共線
h1:=vertically(u1, 0, x1, u7, u3, u4, u5, u6);
h2:=collinear(u3, u4, x1, u7, u5, u6);
% EQ⊥CA かつ　C-Q-Aは共線
h3:=vertically(u3, 0, x2, u8, u5, u6, u1, u2);
h4:=collinear(u5, u6, x2, u8, u1, u2);
% FR⊥AB かつ　A-R-Bは共線
h5:=vertically(u5, 0, x3, u9, u1, u2, u3, u4);
h6:=collinear(u1, u2, x3, u9, u3, u4);

% EQとFRがPで交わる
% E-P-Q, F-P-Rはそれぞれ共線となっている

h7:=collinear(u3, 0, x1, u7, x2, u8);
h8:=collinear(u5, 0, x1, u7, x3, u9);


%----------------------------------------------------------------------;
% 結論 ----------------------------------------------------------------;
% DB^2 - DC^2 + EC^2 -EA^2 + FA^2 -FB^2 = 0

db2:=squared_euclid(u1, 0, u3, u4);
dc2:=squared_euclid(u1, 0, u5, u6);
ec2:=squared_euclid(u3, 0, u5, u6);
ea2:=squared_euclid(u3, 0, u1, u2);
fa2:=squared_euclid(u5, 0, u1, u2);
fb2:=squared_euclid(u5, 0, u3, u4);

conclusion:=db2-dc2+ec2-ea2+fa2-fb2;

showtime;

%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x3, x2, x1}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(h8, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;

showtime;
;end;