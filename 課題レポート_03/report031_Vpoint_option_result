%----------------------------------------------------------------------;
% 三角形ABCの各頂点から、向かい合う辺に下ろした3本の垂線は1点V(垂心)で交わる
%----------------------------------------------------------------------;
% ＜前提条件＞
% 三角形ABCの各頂点から、それぞれ対辺BC, CA, ABに下ろした垂線の足を -------------;
% D, E, Fとしたとき、Dを原点(0, 0)として線分CDがxy座標上のy軸に重なるような --------;
% 三角形ABCを考える -----------------------------------------------------;
% A(a, 0) B(b, 0) C(0, c)
% D(0, 0) E(e1, e2) F(f1, f2)
% V(0, v)

% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

% 出力時の変数の順序を定める宣言的記述 -------------------------------------;
order v, e1, e2, f1, f2, a, b, c;



% 引数の順序には何の影響も与えないが、区切って出力させる宣言的記述 ----------------;
% その後の様々な操作をする際の前提としてこの宣言が必要になる場合がある --------------;
factor v, e1, e2, f1, f2;



% 関数定義読み込み（※ローカル環境へコピーした） -------------------------------;
in cal_sys_relations$




%----------------------------------------------------------------------;
% 仮定 ----------------------------------------------------------------;

%-------------------------------------------;
% 垂線: 直線ABと直線CDが垂直に交わるときの関数f
% vertically(a1,a2,b1,b2,c1,c2,d1,d2);
%        f:=(a1-b1)*(c1-d1)+(a2-b2)*(c2-d2);
%-------------------------------------------;

%-------------------------------------------;
% 共線: 直線AB上に点Cがあるときの関数f
% collinear(a1,a2,b1,b2,c1,c2)$
%       f:=(a1-b1)*(b2-c2)-(a2-b2)*(b1-c1);
%-------------------------------------------;


% D は 頂点Cから対辺ABに下ろした垂線の足 ( A-D-B と考える ) -------------------;
% A(a, 0) B(b, 0) C(0, c) D(0, 0)
% このとき、「AB ⊥ CD」 かつ 「A, D, Bは共線 collinear」であるが… ----------------;

vertically(a, 0, b, 0, 0, c, 0, 0);


0

collinear(a, 0, 0, 0, b, 0);


0


%%%% 前提条件から自明である ====> 0 になってしまう(多項式がつくれない) ------------;


% E は 頂点Aから対辺BCに下ろした垂線の足 ( B-E-C と考える ) -------------------;
% B(b, 0) C(0, c) A(a, 0) E(e1, e2)
% このとき、「BC ⊥ AE」 かつ　「B, E, Cは共線 collinear」である ------------------;

s1:=vertically(b, 0, 0, c, a, 0, e1, e2);


s1 :=  - e1*b + e2*c + a*b

s2:=collinear(b, 0, e1, e2, 0, c);


s2 := e1*c + e2*b - b*c



% F は 頂点Bから対辺CAに下ろした垂線の足 ( C-F-A と考える ) -------------------;
% C(0, c) A(a, 0) B(b, 0) F(f1, f2)
% このとき、「CA ⊥ BF」 かつ 「C, F, Aは共線 collinear」である -------------------;

s3:=vertically(0, c, a, 0, b, 0, f1, f2);


s3 := f1*a - f2*c - a*b

s4:=collinear(0, c, f1, f2, a, 0);


s4 :=  - f1*c - f2*a + a*c



% C-V-D は一直線 -------------------------------------------------------;
% C(0, c) V(0, v) D(0, 0)

collinear(0, c, 0, v, 0, 0);


0


%%%% 前提条件から自明である ====> 0 になってしまう(多項式がつくれない) ------------;

% B-V-F は一直線 -------------------------------------------------------;
% B(b, 0) V(0, v) F(f1, f2)

s5:=collinear(b, 0, 0, v, f1, f2);


s5 :=  - v*f1 + v*b - f2*b



%----------------------------------------------------------------------;
% 結論 ----------------------------------------------------------------;

% A-V-E は一直線 -------------------------------------------------------;
% A(a, 0) V(0, v) E(e1, e2)

v_conclusion:=collinear(a, 0, 0, v, e1, e2);


v_conclusion :=  - v*e1 + v*a - e2*a



showtime;


Time: 20 ms  plus GC time: 10 ms



%----------------------------------------------------------------------;
% Groebner Basis:  ----------------------------------------------------;


% 変数を定義し、lex形式で並べる --------------------------------------------;
torder({v, e1, e2, f1, f2}, lex)$



% 仮定において定義した式からGroebner Basisを求める ----------------------------;
gb:=groebner{s1, s2, s3, s4, s5};


gb := {c*v + a*b,

         2    2           2      2
       (b  + c )*e1 - (a*b  + b*c ),

            2    2                 2
        - (b  + c )*e2 - (a*b*c - b *c),

            2    2         2        2
        - (a  + c )*f1 + (a *b + a*c ),

            2    2         2
        - (a  + c )*f2 + (a *c - a*b*c)}


% a, b, c に関する制約条件 -----------------------------------------------;

glterms;


{b,

 c,

 a,

  2    2
 a  + c ,

  2    2
 b  + c }


% gbを法としてv_conclusion を簡約 -----------------------------------------;
preduce(v_conclusion, gb);


0


% ==> 0 になっていれば、定理は成立 ------------------------------------------;

%----------------------------------------------------------------------;
% V座標も求めてみる ------------------------------------------------------;
solve(first(gb), v);


     - a*b
{v=--------}
      c


%----------------------------------------------------------------------;


showtime;


Time: 20 ms


;

end;
