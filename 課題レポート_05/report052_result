% [定理 １３] ----------------------------------------------------------;
% 〈メネラウス(Menelaus)の定理の証明〉
% △ABCの3辺BC, CA, ABまたはその延長が頂点を通らない１直線と交わる点をそれぞれ
% P, Q, R とする。 ※１直線P-Q-R が x軸と一致するように座標を取った
% A(u1, u2) B(u3, u4) C(u5, u6)
% P(x1, 0) Q(x2, 0) R(x3, 0)
%----------------------------------------------------------------------;

% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

order x3, x2, x1, u6, u5, u4, u3, u2, u1;


factor x3, x2, x1;



% 関数定義読み込み（※ローカル環境へコピーしてきたもの） --------------------------;
in cal_sys_relations$




%----------------------------------------------------------------------;
% 仮定 ----------------------------------------------------------------;

% P, Q, Rは共線となっている -----------------------------------------------;

h1:=collinear(x1, 0, x2, 0, x3, 0);


h1 := 0



% 各頂点からPQRに下ろした垂線の足をそれぞれD, E, Fとする
% D(u1, 0) E(u3, 0) F(u5, 0)
% つまり、PQ⊥BE, QR⊥CF, RP⊥ADとなる

h2:=vertically(x1, 0, x2, 0, u3, u4, u3, 0);


h2 := 0

h3:=vertically(x2, 0, x3, 0, u5, u6, u5, 0);


h3 := 0

h4:=vertically(x3, 0, x1, 0, u1, u2, u1, 0);


h4 := 0



% A-B-P, B-Q-C, C-R-Aはそれぞれ共線となっている -----------------------------;

h5:=collinear(u1, u2, u3, u4, x1, 0);


h5 := x1*( - u4 + u2) + u4*u1 - u3*u2

h6:=collinear(u3, u4, x2, 0, u5, u6);


h6 := x2*(u6 - u4) - u6*u3 + u5*u4

h7:=collinear(u5, u6, x3, 0, u1, u2);


h7 := x3*( - u6 + u2) + u6*u1 - u5*u2



%----------------------------------------------------------------------;
% 結論 ----------------------------------------------------------------;
% (BP*CQ*AR)^2 = (PC*QA*RB)^2 が導ければよい
% ※各辺の長さは負の数を取りえないので, 負の場合を考える必要はない

bp2:=(x1-u3)^2+(0-u4)^2;


         2               2     2
bp2 := x1  - 2*x1*u3 + u4  + u3

cq2:=(x2-u5)^2+(0-u6)^2;


         2               2     2
cq2 := x2  - 2*x2*u5 + u6  + u5

ar2:=(x3-u1)^2+(0-u2)^2;


         2               2     2
ar2 := x3  - 2*x3*u1 + u2  + u1


pc2:=(u5-x1)^2+(u6-0)^2;


         2               2     2
pc2 := x1  - 2*x1*u5 + u6  + u5

qa2:=(u1-x2)^2+(u2-0)^2;


         2               2     2
qa2 := x2  - 2*x2*u1 + u2  + u1

rb2:=(u3-x3)^2+(u4-0)^2;


         2               2     2
rb2 := x3  - 2*x3*u3 + u4  + u3


conclusion:=(bp2*cq2*ar2)-(pc2*qa2*rb2);


                2   2                      2   2       2     2     2     2
conclusion := x3 *x2 *x1*(2*u5 - 2*u3) + x3 *x2 *( - u6  - u5  + u4  + u3 )

                   2      2                      2
               + x3 *x2*x1 *( - 2*u5 + 2*u1) + x3 *x2*x1*(4*u5*u3 - 4*u5*u1)

                   2         2          2             2          2
               + x3 *x2*(2*u6 *u1 + 2*u5 *u1 - 2*u5*u4  - 2*u5*u3 )

                   2   2    2     2     2     2
               + x3 *x1 *(u6  + u5  - u2  - u1 )

                   2            2          2             2          2      2
               + x3 *x1*( - 2*u6 *u3 - 2*u5 *u3 + 2*u5*u2  + 2*u5*u1 ) + x3 *(

                   2   2     2   2     2   2     2   2     2   2     2   2
                 u6 *u4  + u6 *u3  - u6 *u2  - u6 *u1  + u5 *u4  + u5 *u3

                      2   2     2   2         2   2
                  - u5 *u2  - u5 *u1 ) + x3*x2 *x1 *(2*u3 - 2*u1)

                      2
               + x3*x2 *x1*( - 4*u5*u3 + 4*u3*u1)

                      2      2          2          2          2
               + x3*x2 *(2*u6 *u3 + 2*u5 *u3 - 2*u4 *u1 - 2*u3 *u1)

                         2
               + x3*x2*x1 *(4*u5*u1 - 4*u3*u1) + x3*x2

                       2             2                2             2
              *( - 4*u6 *u3*u1 - 4*u5 *u3*u1 + 4*u5*u4 *u1 + 4*u5*u3 *u1)

                      2         2          2             2          2
               + x3*x1 *( - 2*u6 *u1 - 2*u5 *u1 + 2*u3*u2  + 2*u3*u1 )

                            2             2                   2             2
               + x3*x1*(4*u6 *u3*u1 + 4*u5 *u3*u1 - 4*u5*u3*u2  - 4*u5*u3*u1 ) +

                          2   2          2   2          2      2       2      2
               x3*( - 2*u6 *u4 *u1 - 2*u6 *u3 *u1 + 2*u6 *u3*u2  + 2*u6 *u3*u1

                        2   2          2   2          2      2       2      2
                  - 2*u5 *u4 *u1 - 2*u5 *u3 *u1 + 2*u5 *u3*u2  + 2*u5 *u3*u1 )

                   2   2       2     2     2     2
               + x2 *x1 *( - u4  - u3  + u2  + u1 )

                   2            2          2          2          2      2
               + x2 *x1*(2*u5*u4  + 2*u5*u3  - 2*u3*u2  - 2*u3*u1 ) + x2 *(

                      2   2     2   2     2   2     2   2     2   2     2   2
                  - u6 *u4  - u6 *u3  - u5 *u4  - u5 *u3  + u4 *u2  + u4 *u1

                      2   2     2   2
                  + u3 *u2  + u3 *u1 )

                      2            2          2       2          2
               + x2*x1 *( - 2*u5*u2  - 2*u5*u1  + 2*u4 *u1 + 2*u3 *u1) + x2*x1

                          2             2                2             2
              *( - 4*u5*u4 *u1 - 4*u5*u3 *u1 + 4*u5*u3*u2  + 4*u5*u3*u1 ) + x2*(

                     2   2          2   2          2   2          2   2
                 2*u6 *u4 *u1 + 2*u6 *u3 *u1 + 2*u5 *u4 *u1 + 2*u5 *u3 *u1

                           2   2          2   2          2   2          2   2
                  - 2*u5*u4 *u2  - 2*u5*u4 *u1  - 2*u5*u3 *u2  - 2*u5*u3 *u1 ) +

                 2    2   2     2   2     2   2     2   2     2   2     2   2
               x1 *(u6 *u2  + u6 *u1  + u5 *u2  + u5 *u1  - u4 *u2  - u4 *u1

                      2   2     2   2               2      2       2      2
                  - u3 *u2  - u3 *u1 ) + x1*( - 2*u6 *u3*u2  - 2*u6 *u3*u1

                        2      2       2      2          2   2          2   2
                  - 2*u5 *u3*u2  - 2*u5 *u3*u1  + 2*u5*u4 *u2  + 2*u5*u4 *u1

                           2   2          2   2
                  + 2*u5*u3 *u2  + 2*u5*u3 *u1 )


showtime;


Time: 0 ms  plus GC time: 20 ms



%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x3, x2, x1}, lex)$



%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7};


gb := {(u2 - u6)*x3 + (u1*u6 - u2*u5),

        - (u4 - u6)*x2 - (u3*u6 - u4*u5),

       (u2 - u4)*x1 + (u1*u4 - u2*u3)}


%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


{ - u4 + u2, - u6 + u4, - u6 + u2}



%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(conclusion, gb);


      6   4   2       6   3   3     6   2   4       5         4
 - (u1 *u4 *u6  - 2*u1 *u4 *u6  + u1 *u4 *u6  + 2*u1 *u2*u3*u4 *u6

           5         3   2       5         2   3       5            4
     - 6*u1 *u2*u3*u4 *u6  + 6*u1 *u2*u3*u4 *u6  - 2*u1 *u2*u3*u4*u6

           5      4             5      3      2       5      2      3
     - 2*u1 *u2*u4 *u5*u6 + 6*u1 *u2*u4 *u5*u6  - 6*u1 *u2*u4 *u5*u6

           5            4       5      4   2       5      3   3
     + 2*u1 *u2*u4*u5*u6  - 2*u1 *u3*u4 *u6  + 6*u1 *u3*u4 *u6

           5      2   4       5   4      2       5   3      3       5   2      4
     - 4*u1 *u3*u4 *u6  - 4*u1 *u4 *u5*u6  + 6*u1 *u4 *u5*u6  - 2*u1 *u4 *u5*u6

         4   2   2   4       4   2   2   3          4   2   2   2   2
     + u1 *u2 *u3 *u4  - 6*u1 *u2 *u3 *u4 *u6 + 9*u1 *u2 *u3 *u4 *u6

           4   2   2      3     4   2   2   4       4   2      4
     - 6*u1 *u2 *u3 *u4*u6  + u1 *u2 *u3 *u6  - 2*u1 *u2 *u3*u4 *u5

            4   2      3              4   2      2      2
     + 12*u1 *u2 *u3*u4 *u5*u6 - 18*u1 *u2 *u3*u4 *u5*u6

            4   2            3       4   2         4     4   2   6
     + 12*u1 *u2 *u3*u4*u5*u6  - 2*u1 *u2 *u3*u5*u6  + u1 *u2 *u4

           4   2   5        4   2   4   2     4   2   4   2
     - 2*u1 *u2 *u4 *u6 + u1 *u2 *u4 *u5  + u1 *u2 *u4 *u6

           4   2   3   2          4   2   2   2   2     4   2   2   4
     - 6*u1 *u2 *u4 *u5 *u6 + 9*u1 *u2 *u4 *u5 *u6  + u1 *u2 *u4 *u6

           4   2      2   3       4   2      5     4   2   2   4     4   2   6
     - 6*u1 *u2 *u4*u5 *u6  - 2*u1 *u2 *u4*u6  + u1 *u2 *u5 *u6  + u1 *u2 *u6

           4      2   4           4      2   3   2        4      2   2   3
     - 2*u1 *u2*u3 *u4 *u6 + 12*u1 *u2*u3 *u4 *u6  - 18*u1 *u2*u3 *u4 *u6

           4      2      4       4         4             4         3      2
     + 8*u1 *u2*u3 *u4*u6  - 6*u1 *u2*u3*u4 *u5*u6 + 6*u1 *u2*u3*u4 *u5*u6

           4         2      3       4               4       4      6
     + 6*u1 *u2*u3*u4 *u5*u6  - 6*u1 *u2*u3*u4*u5*u6  - 2*u1 *u2*u4 *u6

           4      5   2       4      4   2          4      4   3
     + 4*u1 *u2*u4 *u6  + 8*u1 *u2*u4 *u5 *u6 - 2*u1 *u2*u4 *u6

            4      3   2   2       4      3   4        4      2   2   3
     - 18*u1 *u2*u4 *u5 *u6  - 2*u1 *u2*u4 *u6  + 12*u1 *u2*u4 *u5 *u6

           4      2   5       4         2   4       4         6
     + 4*u1 *u2*u4 *u6  - 2*u1 *u2*u4*u5 *u6  - 2*u1 *u2*u4*u6

         4   2   4   2       4   2   3   3       4   2   2   4
     + u1 *u3 *u4 *u6  - 6*u1 *u3 *u4 *u6  + 6*u1 *u3 *u4 *u6

           4      4      2        4      3      3       4      2      4
     + 8*u1 *u3*u4 *u5*u6  - 18*u1 *u3*u4 *u5*u6  + 8*u1 *u3*u4 *u5*u6

         4   6   2       4   5   3       4   4   2   2       4   4   4
     + u1 *u4 *u6  - 2*u1 *u4 *u6  + 6*u1 *u4 *u5 *u6  + 2*u1 *u4 *u6

           4   3   2   3       4   3   5     4   2   2   4     4   2   6
     - 6*u1 *u4 *u5 *u6  - 2*u1 *u4 *u6  + u1 *u4 *u5 *u6  + u1 *u4 *u6

           3   3   3   3       3   3   3   2          3   3   3      2
     - 2*u1 *u2 *u3 *u4  + 6*u1 *u2 *u3 *u4 *u6 - 6*u1 *u2 *u3 *u4*u6

           3   3   3   3       3   3   2   3           3   3   2   2
     + 2*u1 *u2 *u3 *u6  + 6*u1 *u2 *u3 *u4 *u5 - 18*u1 *u2 *u3 *u4 *u5*u6

            3   3   2         2       3   3   2      3       3   3      5
     + 18*u1 *u2 *u3 *u4*u5*u6  - 6*u1 *u2 *u3 *u5*u6  - 2*u1 *u2 *u3*u4

           3   3      4          3   3      3   2       3   3      3   2
     + 6*u1 *u2 *u3*u4 *u6 - 6*u1 *u2 *u3*u4 *u5  - 8*u1 *u2 *u3*u4 *u6

            3   3      2   2          3   3      2   3
     + 18*u1 *u2 *u3*u4 *u5 *u6 + 8*u1 *u2 *u3*u4 *u6

            3   3         2   2       3   3         4       3   3      2   3
     - 18*u1 *u2 *u3*u4*u5 *u6  - 6*u1 *u2 *u3*u4*u6  + 6*u1 *u2 *u3*u5 *u6

           3   3      5       3   3   5          3   3   4
     + 2*u1 *u2 *u3*u6  + 2*u1 *u2 *u4 *u5 - 6*u1 *u2 *u4 *u5*u6

           3   3   3   3       3   3   3      2       3   3   2   3
     + 2*u1 *u2 *u4 *u5  + 8*u1 *u2 *u4 *u5*u6  - 6*u1 *u2 *u4 *u5 *u6

           3   3   2      3       3   3      3   2       3   3         4
     - 8*u1 *u2 *u4 *u5*u6  + 6*u1 *u2 *u4*u5 *u6  + 6*u1 *u2 *u4*u5*u6

           3   3   3   3       3   3      5       3   2   3   3
     - 2*u1 *u2 *u5 *u6  - 2*u1 *u2 *u5*u6  + 6*u1 *u2 *u3 *u4 *u6

            3   2   3   2   2        3   2   3      3       3   2   3   4
     - 18*u1 *u2 *u3 *u4 *u6  + 18*u1 *u2 *u3 *u4*u6  - 4*u1 *u2 *u3 *u6

           3   2   2   4          3   2   2   3
     - 4*u1 *u2 *u3 *u4 *u5 + 6*u1 *u2 *u3 *u4 *u5*u6

            3   2   2   2      2        3   2   2         3
     + 18*u1 *u2 *u3 *u4 *u5*u6  - 30*u1 *u2 *u3 *u4*u5*u6

           3   2   2      4       3   2      5          3   2      4   2
     + 8*u1 *u2 *u3 *u5*u6  + 6*u1 *u2 *u3*u4 *u6 + 8*u1 *u2 *u3*u4 *u5

            3   2      4   2        3   2      3   2
     - 10*u1 *u2 *u3*u4 *u6  - 30*u1 *u2 *u3*u4 *u5 *u6

            3   2      2   2   2       3   2      2   4
     + 18*u1 *u2 *u3*u4 *u5 *u6  + 6*u1 *u2 *u3*u4 *u6

           3   2         2   3       3   2         5       3   2      2   4
     + 6*u1 *u2 *u3*u4*u5 *u6  + 2*u1 *u2 *u3*u4*u6  - 4*u1 *u2 *u3*u5 *u6

           3   2      6       3   2   6          3   2   5
     - 4*u1 *u2 *u3*u6  - 4*u1 *u2 *u4 *u5 + 2*u1 *u2 *u4 *u5*u6

           3   2   4   3       3   2   4      2        3   2   3   3
     - 4*u1 *u2 *u4 *u5  + 6*u1 *u2 *u4 *u5*u6  + 18*u1 *u2 *u4 *u5 *u6

            3   2   2   3   2        3   2   2      4       3   2      3   3
     - 18*u1 *u2 *u4 *u5 *u6  - 10*u1 *u2 *u4 *u5*u6  + 6*u1 *u2 *u4*u5 *u6

           3   2         5       3      3   3   2        3      3   2   3
     + 6*u1 *u2 *u4*u5*u6  - 6*u1 *u2*u3 *u4 *u6  + 18*u1 *u2*u3 *u4 *u6

            3      3      4       3      2   4              3      2   3      2
     - 12*u1 *u2*u3 *u4*u6  + 8*u1 *u2*u3 *u4 *u5*u6 - 30*u1 *u2*u3 *u4 *u5*u6

            3      2   2      3       3      2         4       3         5   2
     + 18*u1 *u2*u3 *u4 *u5*u6  + 4*u1 *u2*u3 *u4*u5*u6  - 6*u1 *u2*u3*u4 *u6

           3         4   2           3         4   3        3         3   2   2
     + 4*u1 *u2*u3*u4 *u5 *u6 + 10*u1 *u2*u3*u4 *u6  + 18*u1 *u2*u3*u4 *u5 *u6

           3         3   4        3         2   2   3        3         2   5
     - 2*u1 *u2*u3*u4 *u6  - 30*u1 *u2*u3*u4 *u5 *u6  - 10*u1 *u2*u3*u4 *u6

           3            2   4       3            6       3      6
     + 8*u1 *u2*u3*u4*u5 *u6  + 8*u1 *u2*u3*u4*u6  + 8*u1 *u2*u4 *u5*u6

            3      5      2        3      4   3          3      4      3
     - 10*u1 *u2*u4 *u5*u6  - 12*u1 *u2*u4 *u5 *u6 - 2*u1 *u2*u4 *u5*u6

            3      3   3   2        3      3      4       3      2   3   3
     + 18*u1 *u2*u4 *u5 *u6  + 10*u1 *u2*u4 *u5*u6  - 6*u1 *u2*u4 *u5 *u6

           3      2      5       3   3   3   3       3   3   2   4
     - 6*u1 *u2*u4 *u5*u6  + 2*u1 *u3 *u4 *u6  - 4*u1 *u3 *u4 *u6

           3   2   4      2        3   2   3      3        3   2   2      4
     - 4*u1 *u3 *u4 *u5*u6  + 18*u1 *u3 *u4 *u5*u6  - 12*u1 *u3 *u4 *u5*u6

           3      5   3        3      4   2   2       3      4   4
     + 2*u1 *u3*u4 *u6  - 12*u1 *u3*u4 *u5 *u6  - 4*u1 *u3*u4 *u6

            3      3   2   3       3      3   5       3      2   2   4
     + 18*u1 *u3*u4 *u5 *u6  + 6*u1 *u3*u4 *u6  - 4*u1 *u3*u4 *u5 *u6

           3      2   6       3   6      2       3   5      3
     - 4*u1 *u3*u4 *u6  - 4*u1 *u4 *u5*u6  + 6*u1 *u4 *u5*u6

           3   4   3   2       3   4      4       3   3   3   3
     - 4*u1 *u4 *u5 *u6  - 4*u1 *u4 *u5*u6  + 2*u1 *u4 *u5 *u6

           3   3      5     2   4   4   2       2   4   4
     + 2*u1 *u4 *u5*u6  + u1 *u2 *u3 *u4  - 2*u1 *u2 *u3 *u4*u6

         2   4   4   2       2   4   3   2          2   4   3
     + u1 *u2 *u3 *u6  - 4*u1 *u2 *u3 *u4 *u5 + 8*u1 *u2 *u3 *u4*u5*u6

           2   4   3      2       2   4   2   4       2   4   2   3
     - 4*u1 *u2 *u3 *u5*u6  + 2*u1 *u2 *u3 *u4  - 8*u1 *u2 *u3 *u4 *u6

           2   4   2   2   2        2   4   2   2   2        2   4   2      2
     + 6*u1 *u2 *u3 *u4 *u5  + 10*u1 *u2 *u3 *u4 *u6  - 12*u1 *u2 *u3 *u4*u5 *u6

           2   4   2      3       2   4   2   2   2       2   4   2   4
     - 8*u1 *u2 *u3 *u4*u6  + 6*u1 *u2 *u3 *u5 *u6  + 2*u1 *u2 *u3 *u6

           2   4      4           2   4      3             2   4      2   3
     - 4*u1 *u2 *u3*u4 *u5 + 16*u1 *u2 *u3*u4 *u5*u6 - 4*u1 *u2 *u3*u4 *u5

            2   4      2      2       2   4         3
     - 20*u1 *u2 *u3*u4 *u5*u6  + 8*u1 *u2 *u3*u4*u5 *u6

            2   4            3       2   4      3   2       2   4         4
     + 16*u1 *u2 *u3*u4*u5*u6  - 4*u1 *u2 *u3*u5 *u6  - 4*u1 *u2 *u3*u5*u6

         2   4   6       2   4   5          2   4   4   2       2   4   3   2
     + u1 *u2 *u4  - 2*u1 *u2 *u4 *u6 + 2*u1 *u2 *u4 *u5  - 8*u1 *u2 *u4 *u5 *u6

           2   4   3   3     2   4   2   4        2   4   2   2   2
     + 2*u1 *u2 *u4 *u6  + u1 *u2 *u4 *u5  + 10*u1 *u2 *u4 *u5 *u6

           2   4      4          2   4      2   3       2   4      5
     - 2*u1 *u2 *u4*u5 *u6 - 8*u1 *u2 *u4*u5 *u6  - 2*u1 *u2 *u4*u6

         2   4   4   2       2   4   2   4     2   4   6       2   3   4   2
     + u1 *u2 *u5 *u6  + 2*u1 *u2 *u5 *u6  + u1 *u2 *u6  - 6*u1 *u2 *u3 *u4 *u6

            2   3   4      2       2   3   4   3       2   3   3   3
     + 12*u1 *u2 *u3 *u4*u6  - 6*u1 *u2 *u3 *u6  + 6*u1 *u2 *u3 *u4 *u5

           2   3   3   2              2   3   3         2
     + 6*u1 *u2 *u3 *u4 *u5*u6 - 30*u1 *u2 *u3 *u4*u5*u6

            2   3   3      3       2   3   2   4           2   3   2   3   2
     + 18*u1 *u2 *u3 *u5*u6  - 8*u1 *u2 *u3 *u4 *u6 - 18*u1 *u2 *u3 *u4 *u5

            2   3   2   3   2        2   3   2   2   2
     + 16*u1 *u2 *u3 *u4 *u6  + 18*u1 *u2 *u3 *u4 *u5 *u6

           2   3   2   2   3        2   3   2      2   2        2   3   2      4
     - 8*u1 *u2 *u3 *u4 *u6  + 18*u1 *u2 *u3 *u4*u5 *u6  + 10*u1 *u2 *u3 *u4*u6

            2   3   2   2   3       2   3   2   5       2   3      5
     - 18*u1 *u2 *u3 *u5 *u6  - 6*u1 *u2 *u3 *u6  + 6*u1 *u2 *u3*u4 *u5

           2   3      4              2   3      3   3       2   3      3      2
     - 2*u1 *u2 *u3*u4 *u5*u6 + 18*u1 *u2 *u3*u4 *u5  - 8*u1 *u2 *u3*u4 *u5*u6

            2   3      2   3          2   3      2      3
     - 30*u1 *u2 *u3*u4 *u5 *u6 - 8*u1 *u2 *u3*u4 *u5*u6

           2   3         3   2       2   3            4       2   3      3   3
     + 6*u1 *u2 *u3*u4*u5 *u6  - 2*u1 *u2 *u3*u4*u5*u6  + 6*u1 *u2 *u3*u5 *u6

           2   3         5       2   3   6          2   3   5   2
     + 6*u1 *u2 *u3*u5*u6  - 2*u1 *u2 *u4 *u6 - 6*u1 *u2 *u4 *u5

           2   3   5   2        2   3   4   2          2   3   4   3
     + 4*u1 *u2 *u4 *u6  + 10*u1 *u2 *u4 *u5 *u6 - 2*u1 *u2 *u4 *u6

           2   3   3   4       2   3   3   2   2       2   3   3   4
     - 6*u1 *u2 *u4 *u5  - 8*u1 *u2 *u4 *u5 *u6  - 2*u1 *u2 *u4 *u6

            2   3   2   4           2   3   2   2   3       2   3   2   5
     + 12*u1 *u2 *u4 *u5 *u6 + 16*u1 *u2 *u4 *u5 *u6  + 4*u1 *u2 *u4 *u6

           2   3      4   2       2   3      2   4       2   3      6
     - 6*u1 *u2 *u4*u5 *u6  - 8*u1 *u2 *u4*u5 *u6  - 2*u1 *u2 *u4*u6

           2   2   4   2   2        2   2   4      3       2   2   4   4
     + 9*u1 *u2 *u3 *u4 *u6  - 18*u1 *u2 *u3 *u4*u6  + 6*u1 *u2 *u3 *u6

            2   2   3   3              2   2   3   2      2
     - 18*u1 *u2 *u3 *u4 *u5*u6 + 18*u1 *u2 *u3 *u4 *u5*u6

            2   2   3         3        2   2   3      4       2   2   2   4   2
     + 18*u1 *u2 *u3 *u4*u5*u6  - 12*u1 *u2 *u3 *u5*u6  + 6*u1 *u2 *u3 *u4 *u5

            2   2   2   4   2        2   2   2   3   2
     + 10*u1 *u2 *u3 *u4 *u6  + 18*u1 *u2 *u3 *u4 *u5 *u6

           2   2   2   3   3        2   2   2   2   2   2
     - 8*u1 *u2 *u3 *u4 *u6  - 54*u1 *u2 *u3 *u4 *u5 *u6

            2   2   2   2   4        2   2   2      2   3       2   2   2      5
     - 14*u1 *u2 *u3 *u4 *u6  + 18*u1 *u2 *u3 *u4*u5 *u6  + 6*u1 *u2 *u3 *u4*u6

           2   2   2   2   4       2   2   2   6        2   2      5
     + 6*u1 *u2 *u3 *u5 *u6  + 6*u1 *u2 *u3 *u6  - 18*u1 *u2 *u3*u4 *u5*u6

            2   2      4   3        2   2      4      2
     - 12*u1 *u2 *u3*u4 *u5  + 10*u1 *u2 *u3*u4 *u5*u6

            2   2      3   3           2   2      3      3
     + 18*u1 *u2 *u3*u4 *u5 *u6 + 16*u1 *u2 *u3*u4 *u5*u6

            2   2      2   3   2        2   2      2      4
     + 18*u1 *u2 *u3*u4 *u5 *u6  + 10*u1 *u2 *u3*u4 *u5*u6

            2   2         3   3        2   2            5       2   2   6   2
     - 18*u1 *u2 *u3*u4*u5 *u6  - 18*u1 *u2 *u3*u4*u5*u6  + 6*u1 *u2 *u4 *u5

         2   2   6   2       2   2   5   2          2   2   5   3
     + u1 *u2 *u4 *u6  + 6*u1 *u2 *u4 *u5 *u6 + 2*u1 *u2 *u4 *u6

           2   2   4   4        2   2   4   2   2       2   2   4   4
     + 6*u1 *u2 *u4 *u5  - 14*u1 *u2 *u4 *u5 *u6  - 6*u1 *u2 *u4 *u6

            2   2   3   4          2   2   3   2   3       2   2   3   5
     - 18*u1 *u2 *u4 *u5 *u6 - 8*u1 *u2 *u4 *u5 *u6  + 2*u1 *u2 *u4 *u6

           2   2   2   4   2        2   2   2   2   4     2   2   2   6
     + 9*u1 *u2 *u4 *u5 *u6  + 10*u1 *u2 *u4 *u5 *u6  + u1 *u2 *u4 *u6

           2      4   2   3       2      4      4        2      3   3      2
     - 6*u1 *u2*u3 *u4 *u6  + 8*u1 *u2*u3 *u4*u6  + 18*u1 *u2*u3 *u4 *u5*u6

            2      3   2      3       2      3         4
     - 30*u1 *u2*u3 *u4 *u5*u6  + 4*u1 *u2*u3 *u4*u5*u6

            2      2   4   2          2      2   4   3
     - 12*u1 *u2*u3 *u4 *u5 *u6 - 8*u1 *u2*u3 *u4 *u6

            2      2   3   2   2        2      2   3   4
     + 18*u1 *u2*u3 *u4 *u5 *u6  + 10*u1 *u2*u3 *u4 *u6

            2      2   2   2   3       2      2   2   5
     + 18*u1 *u2*u3 *u4 *u5 *u6  + 6*u1 *u2*u3 *u4 *u6

            2      2      2   4        2      2      6        2         5      2
     - 12*u1 *u2*u3 *u4*u5 *u6  - 12*u1 *u2*u3 *u4*u6  + 18*u1 *u2*u3*u4 *u5*u6

           2         4   3           2         4      3
     + 4*u1 *u2*u3*u4 *u5 *u6 - 14*u1 *u2*u3*u4 *u5*u6

            2         3   3   2        2         3      4
     - 30*u1 *u2*u3*u4 *u5 *u6  - 14*u1 *u2*u3*u4 *u5*u6

            2         2   3   3        2         2      5        2      6   2
     + 18*u1 *u2*u3*u4 *u5 *u6  + 18*u1 *u2*u3*u4 *u5*u6  - 12*u1 *u2*u4 *u5 *u6

           2      6   3       2      5   2   2       2      5   4
     - 2*u1 *u2*u4 *u6  + 6*u1 *u2*u4 *u5 *u6  + 2*u1 *u2*u4 *u6

           2      4   4           2      4   2   3       2      4   5
     + 8*u1 *u2*u4 *u5 *u6 + 10*u1 *u2*u4 *u5 *u6  + 2*u1 *u2*u4 *u6

           2      3   4   2       2      3   2   4       2      3   6
     - 6*u1 *u2*u4 *u5 *u6  - 8*u1 *u2*u4 *u5 *u6  - 2*u1 *u2*u4 *u6

         2   4   2   4       2   3   3      3       2   3   2      4
     + u1 *u3 *u4 *u6  - 6*u1 *u3 *u4 *u5*u6  + 8*u1 *u3 *u4 *u5*u6

           2   2   4   2   2       2   2   4   4        2   2   3   2   3
     + 6*u1 *u3 *u4 *u5 *u6  + 2*u1 *u3 *u4 *u6  - 18*u1 *u3 *u4 *u5 *u6

           2   2   3   5       2   2   2   2   4       2   2   2   6
     - 6*u1 *u3 *u4 *u6  + 6*u1 *u3 *u4 *u5 *u6  + 6*u1 *u3 *u4 *u6

           2      5      3       2      4   3   2       2      4      4
     - 6*u1 *u3*u4 *u5*u6  + 8*u1 *u3*u4 *u5 *u6  + 8*u1 *u3*u4 *u5*u6

           2      3   3   3       2      3      5       2   6   2   2
     - 6*u1 *u3*u4 *u5 *u6  - 6*u1 *u3*u4 *u5*u6  + 6*u1 *u4 *u5 *u6

         2   6   4       2   5   2   3       2   5   5     2   4   4   2
     + u1 *u4 *u6  - 6*u1 *u4 *u5 *u6  - 2*u1 *u4 *u6  + u1 *u4 *u5 *u6

           2   4   2   4     2   4   6          5   3   3          5   3   2
     + 2*u1 *u4 *u5 *u6  + u1 *u4 *u6  - 2*u1*u2 *u3 *u4  + 6*u1*u2 *u3 *u4 *u6

              5   3      2          5   3   3          5   2   3
     - 6*u1*u2 *u3 *u4*u6  + 2*u1*u2 *u3 *u6  + 6*u1*u2 *u3 *u4 *u5

               5   2   2                 5   2         2          5   2      3
     - 18*u1*u2 *u3 *u4 *u5*u6 + 18*u1*u2 *u3 *u4*u5*u6  - 6*u1*u2 *u3 *u5*u6

              5      5          5      4             5      3   2
     - 2*u1*u2 *u3*u4  + 4*u1*u2 *u3*u4 *u6 - 6*u1*u2 *u3*u4 *u5

              5      3   2           5      2   2             5      2   3
     - 2*u1*u2 *u3*u4 *u6  + 18*u1*u2 *u3*u4 *u5 *u6 + 2*u1*u2 *u3*u4 *u6

               5         2   2          5         4          5      2   3
     - 18*u1*u2 *u3*u4*u5 *u6  - 4*u1*u2 *u3*u4*u6  + 6*u1*u2 *u3*u5 *u6

              5      5          5   5             5   4                5   3   3
     + 2*u1*u2 *u3*u6  + 2*u1*u2 *u4 *u5 - 4*u1*u2 *u4 *u5*u6 + 2*u1*u2 *u4 *u5

              5   3      2          5   2   3             5   2      3
     + 2*u1*u2 *u4 *u5*u6  - 6*u1*u2 *u4 *u5 *u6 - 2*u1*u2 *u4 *u5*u6

              5      3   2          5         4          5   3   3
     + 6*u1*u2 *u4*u5 *u6  + 4*u1*u2 *u4*u5*u6  - 2*u1*u2 *u5 *u6

              5      5          4   5                4   5   2
     - 2*u1*u2 *u5*u6  + 2*u1*u2 *u3 *u4*u6 - 2*u1*u2 *u3 *u6

              4   4   2             4   4                   4   4      2
     - 2*u1*u2 *u3 *u4 *u5 - 6*u1*u2 *u3 *u4*u5*u6 + 8*u1*u2 *u3 *u5*u6

              4   3   3             4   3   2   2           4   3   2   2
     + 6*u1*u2 *u3 *u4 *u6 + 8*u1*u2 *u3 *u4 *u5  - 10*u1*u2 *u3 *u4 *u6

              4   3      2              4   3      3           4   3   2   2
     + 4*u1*u2 *u3 *u4*u5 *u6 + 10*u1*u2 *u3 *u4*u6  - 12*u1*u2 *u3 *u5 *u6

              4   3   4          4   2   4             4   2   3
     - 4*u1*u2 *u3 *u6  - 4*u1*u2 *u3 *u4 *u5 - 2*u1*u2 *u3 *u4 *u5*u6

               4   2   2   3           4   2   2      2          4   2      3
     - 12*u1*u2 *u3 *u4 *u5  + 10*u1*u2 *u3 *u4 *u5*u6  + 4*u1*u2 *u3 *u4*u5 *u6

               4   2         3          4   2   3   2          4   2      4
     - 14*u1*u2 *u3 *u4*u5*u6  + 8*u1*u2 *u3 *u5 *u6  + 8*u1*u2 *u3 *u5*u6

              4      5             4      4   2          4      4   2
     + 4*u1*u2 *u3*u4 *u6 + 8*u1*u2 *u3*u4 *u5  - 6*u1*u2 *u3*u4 *u6

               4      3   2             4      3   3          4      2   4
     - 14*u1*u2 *u3*u4 *u5 *u6 - 2*u1*u2 *u3*u4 *u6  + 8*u1*u2 *u3*u4 *u5

               4      2   2   2          4      2   4          4         4
     + 10*u1*u2 *u3*u4 *u5 *u6  + 6*u1*u2 *u3*u4 *u6  - 6*u1*u2 *u3*u4*u5 *u6

              4         2   3          4      4   2          4      2   4
     - 2*u1*u2 *u3*u4*u5 *u6  - 2*u1*u2 *u3*u5 *u6  - 4*u1*u2 *u3*u5 *u6

              4      6          4   6             4   4   3
     - 2*u1*u2 *u3*u6  - 2*u1*u2 *u4 *u5 - 4*u1*u2 *u4 *u5

              4   4      2           4   3   3             4   3      3
     + 6*u1*u2 *u4 *u5*u6  + 10*u1*u2 *u4 *u5 *u6 - 2*u1*u2 *u4 *u5*u6

              4   2   5           4   2   3   2          4   2      4
     - 2*u1*u2 *u4 *u5  - 10*u1*u2 *u4 *u5 *u6  - 6*u1*u2 *u4 *u5*u6

              4      5             4      3   3          4         5
     + 2*u1*u2 *u4*u5 *u6 + 6*u1*u2 *u4*u5 *u6  + 4*u1*u2 *u4*u5*u6

              3   5      2          3   5   3           3   4   2
     - 6*u1*u2 *u3 *u4*u6  + 6*u1*u2 *u3 *u6  + 12*u1*u2 *u3 *u4 *u5*u6

              3   4         2           3   4      3          3   3   3   2
     + 6*u1*u2 *u3 *u4*u5*u6  - 18*u1*u2 *u3 *u5*u6  - 6*u1*u2 *u3 *u4 *u5

              3   3   3   2           3   3   2   2
     - 8*u1*u2 *u3 *u4 *u6  - 30*u1*u2 *u3 *u4 *u5 *u6

               3   3      2   2          3   3      4           3   3   2   3
     + 18*u1*u2 *u3 *u4*u5 *u6  - 2*u1*u2 *u3 *u4*u6  + 18*u1*u2 *u3 *u5 *u6

              3   3   5           3   2   4                 3   2   3   3
     + 6*u1*u2 *u3 *u6  + 16*u1*u2 *u3 *u4 *u5*u6 + 18*u1*u2 *u3 *u4 *u5

              3   2   3      2           3   2   2   3
     - 8*u1*u2 *u3 *u4 *u5*u6  + 18*u1*u2 *u3 *u4 *u5 *u6

               3   2   2      3           3   2      3   2
     + 16*u1*u2 *u3 *u4 *u5*u6  - 30*u1*u2 *u3 *u4*u5 *u6

               3   2         4          3   2   3   3          3   2      5
     - 14*u1*u2 *u3 *u4*u5*u6  - 6*u1*u2 *u3 *u5 *u6  - 6*u1*u2 *u3 *u5*u6

              3      5   2          3      5   2           3      4   2
     - 6*u1*u2 *u3*u4 *u5  - 2*u1*u2 *u3*u4 *u6  - 14*u1*u2 *u3*u4 *u5 *u6

              3      4   3           3      3   4           3      3   2   2
     - 2*u1*u2 *u3*u4 *u6  - 18*u1*u2 *u3*u4 *u5  + 16*u1*u2 *u3*u4 *u5 *u6

              3      3   4          3      2   4             3      2   2   3
     + 6*u1*u2 *u3*u4 *u6  + 6*u1*u2 *u3*u4 *u5 *u6 - 8*u1*u2 *u3*u4 *u5 *u6

              3      2   5           3         4   2           3         2   4
     - 6*u1*u2 *u3*u4 *u6  + 12*u1*u2 *u3*u4*u5 *u6  + 16*u1*u2 *u3*u4*u5 *u6

              3         6          3   6                3   5   3
     + 4*u1*u2 *u3*u4*u6  + 4*u1*u2 *u4 *u5*u6 + 6*u1*u2 *u4 *u5

              3   5      2          3   4   3             3   4      3
     - 6*u1*u2 *u4 *u5*u6  - 2*u1*u2 *u4 *u5 *u6 + 6*u1*u2 *u4 *u5*u6

              3   3   5          3   3      4          3   2   5
     + 6*u1*u2 *u4 *u5  - 2*u1*u2 *u4 *u5*u6  - 6*u1*u2 *u4 *u5 *u6

              3   2   3   3          3   2      5          2   5      3
     - 8*u1*u2 *u4 *u5 *u6  - 2*u1*u2 *u4 *u5*u6  + 6*u1*u2 *u3 *u4*u6

              2   5   4           2   4   2      2          2   4         3
     - 4*u1*u2 *u3 *u6  - 18*u1*u2 *u3 *u4 *u5*u6  + 6*u1*u2 *u3 *u4*u5*u6

              2   4      4           2   3   3   2             2   3   3   3
     + 8*u1*u2 *u3 *u5*u6  + 18*u1*u2 *u3 *u4 *u5 *u6 + 8*u1*u2 *u3 *u4 *u6

               2   3   2   2   2          2   3   2   4
     + 18*u1*u2 *u3 *u4 *u5 *u6  + 6*u1*u2 *u3 *u4 *u6

               2   3      2   3           2   3      5          2   3   2   4
     - 30*u1*u2 *u3 *u4*u5 *u6  - 10*u1*u2 *u3 *u4*u6  - 4*u1*u2 *u3 *u5 *u6

              2   3   6          2   2   4   3           2   2   4      2
     - 4*u1*u2 *u3 *u6  - 4*u1*u2 *u3 *u4 *u5  - 20*u1*u2 *u3 *u4 *u5*u6

               2   2   3   3             2   2   3      3
     - 30*u1*u2 *u3 *u4 *u5 *u6 - 8*u1*u2 *u3 *u4 *u5*u6

               2   2   2   3   2           2   2   2      4
     + 18*u1*u2 *u3 *u4 *u5 *u6  + 10*u1*u2 *u3 *u4 *u5*u6

               2   2      3   3           2   2         5
     + 18*u1*u2 *u3 *u4*u5 *u6  + 18*u1*u2 *u3 *u4*u5*u6

               2      5   2             2      5   3          2      4   4
     + 18*u1*u2 *u3*u4 *u5 *u6 + 2*u1*u2 *u3*u4 *u6  + 8*u1*u2 *u3*u4 *u5

               2      4   2   2          2      4   4          2      3   4
     + 10*u1*u2 *u3*u4 *u5 *u6  + 6*u1*u2 *u3*u4 *u6  + 6*u1*u2 *u3*u4 *u5 *u6

              2      3   2   3          2      3   5           2      2   4   2
     - 8*u1*u2 *u3*u4 *u5 *u6  - 6*u1*u2 *u3*u4 *u6  - 18*u1*u2 *u3*u4 *u5 *u6

               2      2   2   4          2      2   6          2   6   3
     - 20*u1*u2 *u3*u4 *u5 *u6  - 2*u1*u2 *u3*u4 *u6  - 4*u1*u2 *u4 *u5

              2   6      2           2   5   3             2   5      3
     - 2*u1*u2 *u4 *u5*u6  - 10*u1*u2 *u4 *u5 *u6 - 6*u1*u2 *u4 *u5*u6

              2   4   5          2   4   3   2          2   4      4
     - 4*u1*u2 *u4 *u5  + 6*u1*u2 *u4 *u5 *u6  + 6*u1*u2 *u4 *u5*u6

              2   3   5             2   3   3   3          2   3      5
     + 6*u1*u2 *u4 *u5 *u6 + 8*u1*u2 *u4 *u5 *u6  + 2*u1*u2 *u4 *u5*u6

                 5      4              4   2      3             4         4
     - 2*u1*u2*u3 *u4*u6  + 12*u1*u2*u3 *u4 *u5*u6  - 6*u1*u2*u3 *u4*u5*u6

                  3   3   2   2             3   3   4             3   2   2   3
     - 18*u1*u2*u3 *u4 *u5 *u6  - 6*u1*u2*u3 *u4 *u6  + 6*u1*u2*u3 *u4 *u5 *u6

                 3   2   5             3      2   4             3      6
     + 2*u1*u2*u3 *u4 *u6  + 8*u1*u2*u3 *u4*u5 *u6  + 8*u1*u2*u3 *u4*u6

                 2   4   3                 2   4      3
     + 8*u1*u2*u3 *u4 *u5 *u6 + 16*u1*u2*u3 *u4 *u5*u6

                 2   3   3   2             2   3      4
     + 6*u1*u2*u3 *u4 *u5 *u6  - 2*u1*u2*u3 *u4 *u5*u6

                  2   2   3   3              2   2      5
     - 18*u1*u2*u3 *u4 *u5 *u6  - 18*u1*u2*u3 *u4 *u5*u6

                     5   2   2                5   4                4   4
     - 18*u1*u2*u3*u4 *u5 *u6  - 4*u1*u2*u3*u4 *u6  - 6*u1*u2*u3*u4 *u5 *u6

                    4   2   3                 3   4   2
     - 2*u1*u2*u3*u4 *u5 *u6  + 12*u1*u2*u3*u4 *u5 *u6

                     3   2   4                3   6             6   3
     + 16*u1*u2*u3*u4 *u5 *u6  + 4*u1*u2*u3*u4 *u6  + 8*u1*u2*u4 *u5 *u6

                 6      3             5   3   2             4   5
     + 4*u1*u2*u4 *u5*u6  + 2*u1*u2*u4 *u5 *u6  - 2*u1*u2*u4 *u5 *u6

                 4   3   3             4      5          4   2      4
     - 6*u1*u2*u4 *u5 *u6  - 4*u1*u2*u4 *u5*u6  - 2*u1*u3 *u4 *u5*u6

              3   3   2   3          3   3   5          3   2   2   4
     + 6*u1*u3 *u4 *u5 *u6  + 2*u1*u3 *u4 *u6  - 4*u1*u3 *u4 *u5 *u6

              3   2   6          2   4   3   2          2   4      4
     - 4*u1*u3 *u4 *u6  - 4*u1*u3 *u4 *u5 *u6  - 4*u1*u3 *u4 *u5*u6

              2   3   3   3          2   3      5             5   2   3
     + 6*u1*u3 *u4 *u5 *u6  + 6*u1*u3 *u4 *u5*u6  + 6*u1*u3*u4 *u5 *u6

                 5   5             4   4   2             4   2   4
     + 2*u1*u3*u4 *u6  - 2*u1*u3*u4 *u5 *u6  - 4*u1*u3*u4 *u5 *u6

                 4   6          6   3   2          6      4          5   3   3
     - 2*u1*u3*u4 *u6  - 4*u1*u4 *u5 *u6  - 2*u1*u4 *u5*u6  + 2*u1*u4 *u5 *u6

              5      5     6   4   2       6   4           6   4   2
     + 2*u1*u4 *u5*u6  + u2 *u3 *u4  - 2*u2 *u3 *u4*u6 + u2 *u3 *u6

           6   3   2          6   3                6   3      2     6   2   4
     - 4*u2 *u3 *u4 *u5 + 8*u2 *u3 *u4*u5*u6 - 4*u2 *u3 *u5*u6  + u2 *u3 *u4

           6   2   3          6   2   2   2     6   2   2   2
     - 2*u2 *u3 *u4 *u6 + 6*u2 *u3 *u4 *u5  + u2 *u3 *u4 *u6

            6   2      2          6   2      3       6   2   2   2     6   2   4
     - 12*u2 *u3 *u4*u5 *u6 - 2*u2 *u3 *u4*u6  + 6*u2 *u3 *u5 *u6  + u2 *u3 *u6

           6      4          6      3             6      2   3
     - 2*u2 *u3*u4 *u5 + 4*u2 *u3*u4 *u5*u6 - 4*u2 *u3*u4 *u5

           6      2      2       6         3          6            3
     - 2*u2 *u3*u4 *u5*u6  + 8*u2 *u3*u4*u5 *u6 + 4*u2 *u3*u4*u5*u6

           6      3   2       6         4     6   4   2       6   3   2
     - 4*u2 *u3*u5 *u6  - 2*u2 *u3*u5*u6  + u2 *u4 *u5  - 2*u2 *u4 *u5 *u6

         6   2   4     6   2   2   2       6      4          6      2   3
     + u2 *u4 *u5  + u2 *u4 *u5 *u6  - 2*u2 *u4*u5 *u6 - 2*u2 *u4*u5 *u6

         6   4   2     6   2   4       5   4   2          5   4      2
     + u2 *u5 *u6  + u2 *u5 *u6  - 2*u2 *u3 *u4 *u6 + 4*u2 *u3 *u4*u6

           5   4   3       5   3   3          5   3   2
     - 2*u2 *u3 *u6  + 2*u2 *u3 *u4 *u5 + 2*u2 *u3 *u4 *u5*u6

            5   3         2       5   3      3       5   2   4
     - 10*u2 *u3 *u4*u5*u6  + 6*u2 *u3 *u5*u6  - 2*u2 *u3 *u4 *u6

           5   2   3   2       5   2   3   2       5   2   2   2
     - 6*u2 *u3 *u4 *u5  + 4*u2 *u3 *u4 *u6  + 6*u2 *u3 *u4 *u5 *u6

           5   2   2   3       5   2      2   2       5   2      4
     + 2*u2 *u3 *u4 *u6  + 6*u2 *u3 *u4*u5 *u6  + 2*u2 *u3 *u4*u6

           5   2   2   3       5   2   5       5      5          5      3   3
     - 6*u2 *u3 *u5 *u6  - 2*u2 *u3 *u6  + 2*u2 *u3*u4 *u5 + 6*u2 *u3*u4 *u5

           5      3      2        5      2   3          5      2      3
     - 6*u2 *u3*u4 *u5*u6  - 10*u2 *u3*u4 *u5 *u6 - 6*u2 *u3*u4 *u5*u6

           5         3   2       5      3   3       5         5       5   5   2
     + 2*u2 *u3*u4*u5 *u6  + 2*u2 *u3*u5 *u6  + 2*u2 *u3*u5*u6  - 2*u2 *u4 *u5

           5   4   2          5   3   4       5   3   2   2       5   2   4
     + 2*u2 *u4 *u5 *u6 - 2*u2 *u4 *u5  + 2*u2 *u4 *u5 *u6  + 4*u2 *u4 *u5 *u6

           5   2   2   3       5      4   2       5      2   4     4   6   2
     + 4*u2 *u4 *u5 *u6  - 2*u2 *u4*u5 *u6  - 2*u2 *u4*u5 *u6  + u2 *u3 *u6

           4   5                4   5      2     4   4   2   2     4   4   2   2
     - 2*u2 *u3 *u4*u5*u6 - 4*u2 *u3 *u5*u6  + u2 *u3 *u4 *u5  + u2 *u3 *u4 *u6

           4   4      2          4   4      3       4   4   2   2
     + 8*u2 *u3 *u4*u5 *u6 - 2*u2 *u3 *u4*u6  + 6*u2 *u3 *u5 *u6

           4   4   4       4   3   3             4   3   2   3
     + 2*u2 *u3 *u6  - 6*u2 *u3 *u4 *u5*u6 - 4*u2 *u3 *u4 *u5

           4   3   2      2        4   3      3          4   3         3
     + 6*u2 *u3 *u4 *u5*u6  - 12*u2 *u3 *u4*u5 *u6 - 2*u2 *u3 *u4*u5*u6

           4   3   3   2       4   3      4       4   2   4   2
     - 4*u2 *u3 *u5 *u6  - 4*u2 *u3 *u5*u6  + 2*u2 *u3 *u4 *u5

            4   2   3   2          4   2   3   3       4   2   2   4
     + 10*u2 *u3 *u4 *u5 *u6 - 2*u2 *u3 *u4 *u6  + 6*u2 *u3 *u4 *u5

            4   2   2   2   2       4   2   2   4       4   2      4
     - 14*u2 *u3 *u4 *u5 *u6  - 6*u2 *u3 *u4 *u6  + 8*u2 *u3 *u4*u5 *u6

            4   2      2   3       4   2      5     4   2   4   2
     + 10*u2 *u3 *u4*u5 *u6  + 2*u2 *u3 *u4*u6  + u2 *u3 *u5 *u6

           4   2   2   4     4   2   6       4      5             4      4   3
     + 2*u2 *u3 *u5 *u6  + u2 *u3 *u6  - 4*u2 *u3*u4 *u5*u6 - 4*u2 *u3*u4 *u5

           4      4      2       4      3   3          4      3      3
     + 6*u2 *u3*u4 *u5*u6  - 2*u2 *u3*u4 *u5 *u6 + 6*u2 *u3*u4 *u5*u6

           4      2   5       4      2   3   2       4      2      4
     - 4*u2 *u3*u4 *u5  + 6*u2 *u3*u4 *u5 *u6  + 6*u2 *u3*u4 *u5*u6

           4         5          4         3   3       4            5
     - 2*u2 *u3*u4*u5 *u6 - 6*u2 *u3*u4*u5 *u6  - 4*u2 *u3*u4*u5*u6

         4   6   2       4   5   2          4   4   4       4   4   2   2
     + u2 *u4 *u5  + 2*u2 *u4 *u5 *u6 + 2*u2 *u4 *u5  - 6*u2 *u4 *u5 *u6

           4   3   4          4   3   2   3     4   2   6     4   2   4   2
     - 2*u2 *u4 *u5 *u6 - 2*u2 *u4 *u5 *u6  + u2 *u4 *u5  + u2 *u4 *u5 *u6

           3   6   3       3   5         2       3   5      3
     - 2*u2 *u3 *u6  + 6*u2 *u3 *u4*u5*u6  + 6*u2 *u3 *u5*u6

           3   4   2   2           3   4      2   2       3   4      4
     - 6*u2 *u3 *u4 *u5 *u6 - 18*u2 *u3 *u4*u5 *u6  - 2*u2 *u3 *u4*u6

           3   4   2   3       3   4   5       3   3   3   3
     - 6*u2 *u3 *u5 *u6  - 2*u2 *u3 *u6  + 2*u2 *u3 *u4 *u5

           3   3   3      2        3   3   2   3           3   3      3   2
     + 8*u2 *u3 *u4 *u5*u6  + 18*u2 *u3 *u4 *u5 *u6 + 18*u2 *u3 *u4*u5 *u6

            3   3         4       3   3   3   3       3   3      5
     + 10*u2 *u3 *u4*u5*u6  + 2*u2 *u3 *u5 *u6  + 2*u2 *u3 *u5*u6

           3   2   4   2          3   2   4   3       3   2   3   4
     - 8*u2 *u3 *u4 *u5 *u6 + 2*u2 *u3 *u4 *u6  - 6*u2 *u3 *u4 *u5

           3   2   3   2   2       3   2   3   4        3   2   2   4
     - 8*u2 *u3 *u4 *u5 *u6  - 2*u2 *u3 *u4 *u6  - 18*u2 *u3 *u4 *u5 *u6

           3   2   2   2   3       3   2   2   5       3   2      4   2
     - 8*u2 *u3 *u4 *u5 *u6  + 2*u2 *u3 *u4 *u6  - 6*u2 *u3 *u4*u5 *u6

           3   2      2   4       3   2      6       3      5   3
     - 8*u2 *u3 *u4*u5 *u6  - 2*u2 *u3 *u4*u6  + 2*u2 *u3*u4 *u5

           3      5      2        3      4   3          3      4      3
     + 2*u2 *u3*u4 *u5*u6  + 10*u2 *u3*u4 *u5 *u6 - 2*u2 *u3*u4 *u5*u6

           3      3   5       3      3      4       3      2   5
     + 6*u2 *u3*u4 *u5  - 2*u2 *u3*u4 *u5*u6  + 6*u2 *u3*u4 *u5 *u6

           3      2   3   3       3      2      5       3   6   2
     + 8*u2 *u3*u4 *u5 *u6  + 2*u2 *u3*u4 *u5*u6  - 2*u2 *u4 *u5 *u6

           3   5   4       3   5   2   2       3   4   4          3   4   2   3
     - 2*u2 *u4 *u5  + 2*u2 *u4 *u5 *u6  - 2*u2 *u4 *u5 *u6 - 2*u2 *u4 *u5 *u6

           3   3   6       3   3   2   4     2   6   4       2   5         3
     - 2*u2 *u4 *u5  + 2*u2 *u4 *u5 *u6  + u2 *u3 *u6  - 6*u2 *u3 *u4*u5*u6

           2   5      4       2   4   2   2   2     2   4   2   4
     - 2*u2 *u3 *u5*u6  + 9*u2 *u3 *u4 *u5 *u6  + u2 *u3 *u4 *u6

            2   4      2   3       2   4      5     2   4   2   4     2   4   6
     + 12*u2 *u3 *u4*u5 *u6  + 4*u2 *u3 *u4*u6  + u2 *u3 *u5 *u6  + u2 *u3 *u6

           2   3   3   3          2   3   3      3        2   3   2   3   2
     - 6*u2 *u3 *u4 *u5 *u6 - 8*u2 *u3 *u4 *u5*u6  - 18*u2 *u3 *u4 *u5 *u6

            2   3   2      4       2   3      3   3       2   3         5
     - 10*u2 *u3 *u4 *u5*u6  - 6*u2 *u3 *u4*u5 *u6  - 6*u2 *u3 *u4*u5*u6

         2   2   4   4        2   2   4   2   2        2   2   3   4
     + u2 *u3 *u4 *u5  + 10*u2 *u3 *u4 *u5 *u6  + 12*u2 *u3 *u4 *u5 *u6

            2   2   3   2   3       2   2   3   5       2   2   2   4   2
     + 16*u2 *u3 *u4 *u5 *u6  + 4*u2 *u3 *u4 *u6  + 9*u2 *u3 *u4 *u5 *u6

            2   2   2   2   4     2   2   2   6       2      5   3
     + 10*u2 *u3 *u4 *u5 *u6  + u2 *u3 *u4 *u6  - 6*u2 *u3*u4 *u5 *u6

           2      5      3       2      4   5        2      4   3   2
     - 2*u2 *u3*u4 *u5*u6  - 2*u2 *u3*u4 *u5  - 10*u2 *u3*u4 *u5 *u6

           2      4      4       2      3   5          2      3   3   3
     - 6*u2 *u3*u4 *u5*u6  - 6*u2 *u3*u4 *u5 *u6 - 8*u2 *u3*u4 *u5 *u6

           2      3      5     2   6   4     2   6   2   2       2   5   4
     - 2*u2 *u3*u4 *u5*u6  + u2 *u4 *u5  + u2 *u4 *u5 *u6  + 4*u2 *u4 *u5 *u6

           2   5   2   3     2   4   6     2   4   4   2          5         4
     + 4*u2 *u4 *u5 *u6  + u2 *u4 *u5  + u2 *u4 *u5 *u6  + 2*u2*u3 *u4*u5*u6

              4   2   2   3          4   2   5          4      2   4
     - 6*u2*u3 *u4 *u5 *u6  - 2*u2*u3 *u4 *u6  - 2*u2*u3 *u4*u5 *u6

              4      6          3   3   3   2          3   3      4
     - 2*u2*u3 *u4*u6  + 6*u2*u3 *u4 *u5 *u6  + 6*u2*u3 *u4 *u5*u6

              3   2   3   3          3   2      5          2   4   4
     + 6*u2*u3 *u4 *u5 *u6  + 6*u2*u3 *u4 *u5*u6  - 2*u2*u3 *u4 *u5 *u6

              2   4   2   3          2   4   5          2   3   4   2
     - 8*u2*u3 *u4 *u5 *u6  - 2*u2*u3 *u4 *u6  - 6*u2*u3 *u4 *u5 *u6

              2   3   2   4          2   3   6             5   3   2
     - 8*u2*u3 *u4 *u5 *u6  - 2*u2*u3 *u4 *u6  + 6*u2*u3*u4 *u5 *u6

                 5      4             4   5                4   3   3
     + 4*u2*u3*u4 *u5*u6  + 2*u2*u3*u4 *u5 *u6 + 6*u2*u3*u4 *u5 *u6

                 4      5          6   4             6   2   3
     + 4*u2*u3*u4 *u5*u6  - 2*u2*u4 *u5 *u6 - 2*u2*u4 *u5 *u6

              5   4   2          5   2   4     4   2   2   4     4   2   6
     - 2*u2*u4 *u5 *u6  - 2*u2*u4 *u5 *u6  + u3 *u4 *u5 *u6  + u3 *u4 *u6

           3   3   3   3       3   3      5     2   4   4   2
     - 2*u3 *u4 *u5 *u6  - 2*u3 *u4 *u5*u6  + u3 *u4 *u5 *u6

           2   4   2   4     2   4   6          5   3   3          5      5
     + 2*u3 *u4 *u5 *u6  + u3 *u4 *u6  - 2*u3*u4 *u5 *u6  - 2*u3*u4 *u5*u6

         6   4   2     6   2   4     4   2       4           4   2       3   3
     + u4 *u5 *u6  + u4 *u5 *u6 )/(u2 *u4  - 2*u2 *u4*u6 + u2 *u6  - 2*u2 *u4

          3   2          3      2       3   3     2   4       2   3
    + 2*u2 *u4 *u6 + 2*u2 *u4*u6  - 2*u2 *u6  + u2 *u4  + 2*u2 *u4 *u6

          2   2   2       2      3     2   4          4             3   2
    - 6*u2 *u4 *u6  + 2*u2 *u4*u6  + u2 *u6  - 2*u2*u4 *u6 + 2*u2*u4 *u6

             2   3             4     4   2       3   3     2   4
    + 2*u2*u4 *u6  - 2*u2*u4*u6  + u4 *u6  - 2*u4 *u6  + u4 *u6 )


% ==> 0 になっていれば、定理は成立 ------------------------------------------;

showtime;


Time: 40 ms  plus GC time: 30 ms


;

end;