% オイラー線(Euler line) の証明 -------------------------------------------;
% △ABCの各頂点から辺BC,CA,ABに向かって下ろした垂線の足をそれぞれD,E,Fとする
% さらに、辺BC,CA,ABの中点をL,M,Nとする
% このとき、△ABCの垂心V, 重心G, 外心Xは一直線上に存在する
%
% A(0, 0) B(u1, u2) C(u3, u4) D(x01, x02) E(x03, x04) F(x05, x06)
% L(x07, x08) M(x09, x10) N(x11, x12) V(x13, x14)
% P(x15, x16) Q(x17, x18) R(x19, x20)
%----------------------------------------------------------------------;

% 関数定義読み込み） ----------------------------------------------------;

in cal_sys_relations$
%----------------------------------------------------------------------;
load_package groebner;
on comp,gcd,ezgcd;
off allfac,pwrds;
%----------------------------------------------------------------------;

%----------------------------------------------------------------------;
% AB and CD cross vertically.
procedure vertically(a1,a2,b1,b2,c1,c2,d1,d2)$
begin
 scalar c;
 c:=(a1-b1)*(c1-d1)+(a2-b2)*(c2-d2);
 return c
end$
%----------------------------------------------------------------------;

%----------------------------------------------------------------------;
% B is the midpoint of A and C
procedure midpoint(x,a1,a2,b1,b2,c1,c2)$
begin
        scalar f;
        if x=1 then f:=2*b1-a1-c1
                else f:=2*b2-a2-c2;
        return f
end$
%----------------------------------------------------------------------;

%----------------------------------------------------------------------;
% 外心Oについて 辺BC,CA,ABの中点をL,M,Nとする
% L(x1, x2) M(x3, x4) N(x5, x6)
procedure circumcenter(x, a1, a2, b1, b2, c1, c2, o1, o2)$
begin
    scalar f, p, h1, h2, h3, h4, h5, h6, h7, h8, h9;
    order x6, x5, x4, x3, x2, x1, o2, o1, c2, c1, b2, b1, a2, a1;
    factor x6, x5, x4, x3, x2, x1, o2, o1;

    % B=L=C
    h1:=midpoint(1, b1, b2, x1, x2, c1, c2);
    h2:=midpoint(0, u1, u2, x1, x2, c1, c2);

    % C=M=A
    h3:=midpoint(1, c1, c2, x3, x4, a1, a2);
    h4:=midpoint(0, c1, c2, x3, x4, a1, a2);

    % A=N=B
    h5:=midpoint(1, a1, a2, x5, x6, b1, b2);
    h6:=midpoint(0, a1, a2, x5, x6, b1, b2);

    % またXは, XL⊥BC, XM⊥CA, XN⊥AB を満たす
    h7:=vertically(o1, o2, x1, x2, b1, b2, c1, c2);
    h8:=vertically(o1, o2, x3, x4, c1, c2, a1, a1);
    h9:=vertically(o1, o2, x5, x6, a1, a2, b1, b2);


    %----------------------------------------------------------------------;
    % Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

    %%% 変数を定義し、lex形式で並べる ------------------------------------------;
    torder({x8, x7, x6, x5, x4, x3, x2, x1, o2, o1}, lex)$

    %%% 仮定において定義した式からGroebner Basisを求める -------------------------;
    gb:=groebner{h1, h2, h3, h4, h5, h6, h7, h8}$

    %%% u に関する制約条件 --------------------------------------------------;
    glterms;

    %%% gbを法としてgを簡約 --------------------------------------------------;
    p:=preduce(h9, gb);

    % ==> 0 になっていれば、外心Xについての仮定が成立 ------------------------------;
    %----------------------------------------------------------------------;

    if x=0 then f:=vertically(o1, o2, x1, x2, b1, b2, c1, c2)
        else if x=1 then f:=vertically(o1, o2, x3, x4, c1, c2, a1, a1)
        else if x=2 then f:=vertically(o1, o2, x5, x6, a1, a2, b1, b2);
    return f

end$
%----------------------------------------------------------------------;



% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

order x22, x21, x20, x19, x18, x17, x16, x15, x14, x13, x12, x11, x10, x09, x08, x07, x06, x05, x04, x03, x02, x01, u4, u3, u2, u1;
factor x22, x21, x20, x19, x18, x17, x16, x15, x14, x13, x12, x11, x10, x09, x08, x07, x06, x05, x04, x03, x02, x01;

% ---------------------------------------------------------------------;
% 仮定 ----------------------------------------------------------------;

% まず、垂心について考えてみる
% △ABCの各頂点から辺BC,CA,ABに向かって下ろした垂線の足をそれぞれD,E,Fとする
% B-D-C かつ AD⊥BC

h1:=collinear(u1, u2, x01, x02, u3, u4);
h2:=vertically(0, 0, x01, x02, u1, u2, u3, u4);


% C-E-A かつ BE⊥CA

h3:=collinear(u3, u4, x03, x04, 0, 0);
h4:=vertically(u1, u2, x03, x04, u3, u4, 0, 0);


% A-F-B かつ CF⊥AB

h5:=collinear(0, 0, x05, x06, u1, u2);
h6:=vertically(u3, u4, x05, x06, 0, 0, u1, u2);


% 垂心VはAD, BE, CFの交点
% A-V-D かつ B-V-E かつ C-V-F

h7:=collinear(0, 0, x13, x14, x01, x02);
h8:=collinear(u1, u2, x13, x14, x03, x04);
h9:=collinear(u3, u4, x13, x14, x05, x06);

%----------------------------------------------------------------------;
% ここで一旦、垂心Vについて仮定が成り立っているか確認してみる -----------------------;
%----------------------------------------------------------------------;


%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x14, x13, x06, x05, x04, x03, x02, x01}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7, h8};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;

%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(h9, gb);

% ==> 0 になっているので、垂心Vについての仮定が成立 -----------------------------;
%----------------------------------------------------------------------;


%----------------------------------------------------------------------;
% 次に、 辺BC,CA,ABの中点をL,M,Nとする

% B=L=C

h10:=midpoint(1, u1, u2, x07, x08, u3, u4);
h11:=midpoint(0, u1, u2, x07, x08, u3, u4);


% C=M=A

h12:=midpoint(1, u3, u4, x09, x10, 0, 0);
h13:=midpoint(0, u3, u4, x09, x10, 0, 0);


% A=N=B

h14:=midpoint(1, 0, 0, x11, x12, u1, u2);
h15:=midpoint(0, 0, 0, x11, x12, u1, u2);


% さらに、 AV, BV, CVの中点をP,Q,Rとする

% A=P=V

h16:=midpoint(1, 0, 0, x15, x16, x13, x14);
h17:=midpoint(0, 0, 0, x15, x16, x13, x14);

% B=Q=V

h18:=midpoint(1, u1, u2, x17, x18, x13, x14);
h19:=midpoint(0, u1, u2, x17, x18, x13, x14);


% C=R=V

h20:=midpoint(1, u3, u4, x19, x20, x13, x14);
h21:=midpoint(0, u3, u4, x19, x20, x13, x14);


% X(x21, x22) とすると、
% △DEFの外心

h22:=circumcenter(0, x01, x02, x03, x04, x05, x06, x21, x22);
h23:=circumcenter(1, x01, x02, x03, x04, x05, x06, x21, x22);
h24:=circumcenter(2, x01, x02, x03, x04, x05, x06, x21, x22);

% △LMNの外心

h25:=circumcenter(0, x07, x08, x09, x10, x11, x12, x21, x22);
h26:=circumcenter(1, x07, x08, x09, x10, x11, x12, x21, x22);
h27:=circumcenter(2, x07, x08, x09, x10, x11, x12, x21, x22);

% △PQRの外心

h28:=circumcenter(0, x15, x16, x17, x18, x19, x20, x21, x22);
h29:=circumcenter(1, x15, x16, x17, x18, x19, x20, x21, x22);
h30:=circumcenter(2, x15, x16, x17, x18, x19, x20, x21, x22);








% ---------------------------------------------------------------------;
% 結論 ----------------------------------------------------------------;

% このとき、△ABCの垂心V, 重心G, 外心Xは一直線に存在する
% V-G-X
conclusion:=collinear(x13, x14, x15, x16, x17, x18);


%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x22, x21, x20, x19, x18, x17, x16, x15, x14, x13, x12, x11, x10, x09, x08, x07, x06, x05, x04, x03, x02, x01}, lex)$



%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20, h21, h22, h23, h24, h25, h26, h27, h28, h29};



%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;

%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(h30, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;


showtime;

;end;
