% [定理 09] ----------------------------------------------------------;

% BCと外角の二等分線の交点であるEを固定するためには
% Eが確実に一箇所でのみ交点になりうることが言えれば良い
% 同時に、Gのy座標もCと一致するようにとれば固定できる
% A(0, 0) B(u1, u2) C(u3, u4)
% D(0, x1) E(x2, 0) F(x3, x4) G(x5, u4)
%----------------------------------------------------------------------;

% 関数定義読み込み） ----------------------------------------------------;

load_package groebner;
on comp,gcd,ezgcd;
off allfac,pwrds;

in cal_sys_relations$


% ２点間のユークリッド距離D^2 -----------------------------------------------;
procedure squared_euclid(a1,a2,b1,b2)$
begin
 scalar d;
 d:=(a1-b1)^2+(a2-b2)^2;
 return d
end$
%----------------------------------------------------------------------;



% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

order x5, x4, x3, x2, x1, u4, u3, u2, u1;
factor x5, x4, x3, x2, x1;

% ---------------------------------------------------------------------;
% 仮定 ----------------------------------------------------------------;

% △ABCの∠Aの内角の二等分線とBCの交点をD(0, x1)
% △ABCの∠Aの外角の二等分線とBCの交点をE(x2, 0)とする

% AC = AG となるようなGを考えると、△ACGは二等辺三角形となり、
% AD⊥CG かつ ∠AGC=∠ACG

h1:=requal(0, 0, u3, u4, 0, 0, x5, u4);
h2:=tangent(0, 0, x5, u4, u3, u4, 0, 0, u3, u4, x5, u4);

% 座標のとり方から自明だが、
% vertically(0, 0, 0, x1, u3, u4, x5, u4) は 0 となるので省略

% DはBC上にあるので共線 (B-D-C) となっている

h3:=collinear(u1, u2, 0, x1, u3, u4);

% AD と GC　の交点をMとすると、MはGCの中点となっているから CM=GM
% △GMDと△CMDにおいて、MDは共通であり∠CMD=∠GMD
% すなわち、2組の辺とその間の角が等しいから、△GMD≡△CMD
% よって、∠MGD=∠MCD <=> ∠CGD=∠GCD

h4:=tangent(u3, u4, x5, u4, 0, x1, x5, u4, u3, u4, 0, x1);


% BAの延長線上に、AD // CF となるようなFをおく
% F(x3, x4)とすると、B-A-Fは共線でもあるはずだから、

h5:=parallel(0, 0, 0, x1, u3, u4, x3, x4);
h6:=collinear(u1, u2, 0, 0, x3, x4);


% ---------------------------------------------------------------------;
% 結論 ----------------------------------------------------------------;

% BD:DC=AB:AC となる

bd2:=squared_euclid(u1, u2, 0, x1);
dc2:=squared_euclid(0, x1, u3, u4);
ab2:=squared_euclid(0, 0, u1, u2);
ac2:=squared_euclid(0, 0, u3, u4);

conclusion:=bd2*ac2-ab2*dc2;


%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x1, x2, x3, x4, x5}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(conclusion, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;

% #################################################################################












h6:=bd2*ac2-ab2*dc2; % conclusion を再利用

% BCの延長線上に △ABCにおける∠Aの外角 の二等分線と交点となるようなFを考える
% 二等辺三角形ACEの頂角∠Aの二等分線は底辺CEと垂直に交わる


h7:=vertically(u4, 0, x4, x5, u1, u2, x6, x7);

% B-C-F
h8:=collinear(u3, 0, u4, 0, x6, x7);

% ∠AFC=∠CEA
h9:=tangent(u1, u2, x6, x7, u4, 0, u4, 0, x4, x5, u1, u2);

% 結論
% BF:FC=AB:AC

bf2:=squared_euclid(u3, 0, x6, 0);
fc2:=squared_euclid(x6, 0, u4, 0);
ab2:=squared_euclid(u1, u2, u3, 0);
ac2:=squared_euclid(u1, u2, u4, 0);

another_conclusion:=bf2*ac2-ab2*fc2;

%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x1, x2, x3, x4, x5, x6, x7}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7, h8, h9};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(another_conclusion, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;


showtime;
;end;