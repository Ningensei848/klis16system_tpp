% [定理 09] ----------------------------------------------------------;
% BCと外角の二等分線の交点であるEを固定するためには
% Eが確実に一箇所でのみ交点になりうることが言えれば良い
% 同時に、Gのy座標もCと一致するようにとれば固定できる
% A(u1, 0) B(u2, u3) C(u4, u5)
% D(x1, x2) E(x3, 0) F(u6, x4) G(u7, x5) M(x6, x7)
%----------------------------------------------------------------------;

% 関数定義読み込み） ----------------------------------------------------;

on comp,gcd,ezgcd;
off allfac,pwrds;

in cal_sys_relations$


% ２点間のユークリッド距離D^2 -----------------------------------------------;
procedure squared_euclid(a1,a2,b1,b2)$
begin
 scalar d;
 d:=(a1-b1)^2+(a2-b2)^2;
 return d
end$
%----------------------------------------------------------------------;


% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

order x7, x6, x5, x4, x3, x2, x1, u7, u6, u5, u4, u3, u2, u1;
factor x7, x6, x5, x4, x3, x2, x1;

% ---------------------------------------------------------------------;
% 仮定 ----------------------------------------------------------------;

% △ABCの∠Aの内角の二等分線とBCの交点をD(x1, x2)
% △ABCの∠Aの外角の二等分線とBCの交点をE(x3, 0)とする

% AC = AG となるようなGを考えると、△AGCは二等辺三角形となる
% また、GCの中点をMとするとAM⊥GCかつA-M-Dは共線となっている

h1:=requal(u1, 0, u4, u5, u1, 0, u7, x5);
h2:=midpoint(1, u7, x5, x6, x7, u4, u5);
h3:=midpoint(0, u7, x5, x6, x7, u4, u5);
h4:=vertically(u1, 0, x6, x7, u7, x5, u4, u5);
h5:=collinear(u1, 0, x6, x7, x1, x2);

% △GMDと△CMDにおいて、MDは共通であり∠CMD=∠GMD=90ﾟ
% すなわち、2組の辺とその間の角が等しいから、△GMD≡△CMD
% よって、DG=DCとなる

h6:=requal(x1, x2, u7, x5, x1, x2, u4, u5);

% BAの延長線上に、AD // CF となるようなFをおく

h7:=parallel(u1, 0, x1, x2, u4, u5, u6, x4);

% #################################################

% B-D-C

h8:=collinear(u2, u3, x1, x2, u4, u5);

% ###### 矛盾は生じないが、計算時間が長すぎるので別の式を追加してほしい？


% ---------------------------------------------------------------------;
% 結論 ----------------------------------------------------------------;

% A(u1, 0) B(u2, u3) C(u4, u5)
% D(x1, x2) E(x3, 0) F(u6, x4) G(u7, x5) M(x6, x7)


% BD:DC=AB:AC となる

bd2:=squared_euclid(u2, u3, x1, x2);
dc2:=squared_euclid(x1, x2, u4, u5);
ab2:=squared_euclid(u1, 0, u2, u3);
ac2:=squared_euclid(u1, 0, u4, u5);

conclusion:=bd2*ac2-ab2*dc2;


%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x1, x2, x3, x4, x5, x6, x7}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7, h8};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(conclusion, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;

% #################################################################################

showtime;
;end;










h6:=bd2*ac2-ab2*dc2; % conclusion を再利用

% BCの延長線上に △ABCにおける∠Aの外角 の二等分線と交点となるようなFを考える
% 二等辺三角形ACEの頂角∠Aの二等分線は底辺CEと垂直に交わる


h7:=vertically(u4, 0, x4, x5, u1, u2, x6, x7);

% B-C-F
h8:=collinear(u3, 0, u4, 0, x6, x7);

% ∠AFC=∠CEA
h9:=tangent(u1, u2, x6, x7, u4, 0, u4, 0, x4, x5, u1, u2);

% 結論
% BF:FC=AB:AC

bf2:=squared_euclid(u3, 0, x6, 0);
fc2:=squared_euclid(x6, 0, u4, 0);
ab2:=squared_euclid(u1, u2, u3, 0);
ac2:=squared_euclid(u1, u2, u4, 0);

another_conclusion:=bf2*ac2-ab2*fc2;

%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x1, x2, x3, x4, x5, x6, x7}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5, h6, h7, h8, h9};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(another_conclusion, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;


showtime;
;end;