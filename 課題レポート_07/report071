% [定理 09] ----------------------------------------------------------;

%----------------------------------------------------------------------;

% 関数定義読み込み） ----------------------------------------------------;

load_package groebner;
on comp,gcd,ezgcd;
off allfac,pwrds;

in cal_sys_relations$


% ２点間のユークリッド距離D^2 -----------------------------------------------;
procedure squared_euclid(a1,a2,b1,b2)$
begin
 scalar d;
 d:=(a1-b1)^2+(a2-b2)^2;
 return d
end$
%----------------------------------------------------------------------;



% ---------------------------------------------------------------------;
% ＜証明＞ -------------------------------------------------------------;

order x6, x5, x4, x3, x2, x1, u4, u3, u2, u1;
factor x6, x5, x4, x3, x2, x1;

% ∠BACの二等分線とBCの交点をDとおく D(x1, 0)
% CA = JA となるようなJを考えると、CJ⊥ADかつB-D-CかつA-J-B
%  (※共線となるB-D-Cは座標のとり方から自明なので省略)
% J(x2, x3)とすると、

h1:=requal(u4, 0, u1, u2, x2, x3, u1, u2);
h2:=vertically(u4, 0, x2, x3, u1, u2, x1, 0);
h3:=collinear(u1, u2, x2, x3, u3, 0);

% BAの延長線上に、AD // CE となるようなEをおく
% E(x4, x5)とすると、

h4:=parallel(u1, u2, u5, 0, u4, 0, x4, x5);

% B-A-E

h5:=collinear(u3, 0, u1, u2, x4, x5);

% BCの延長線上に

% 結論

bd2:=squared_euclid(u3, 0, x1, 0);
dc2:=squared_euclid(x1, 0, u4, 0);
ab2:=squared_euclid(u1, u2, u3, 0);
ac2:=squared_euclid(u1, u2, u4, 0);

conclusion:=bd2*ac2-ab2*dc2;

% ###################################


%----------------------------------------------------------------------;
% Groebner Basis: 結果が1となったら、仮定が誤っている可能性が高い ---------------;

%%% 変数を定義し、lex形式で並べる ------------------------------------------;
torder({x1, x2, x3, x4, x5}, lex)$

%%% 仮定において定義した式からGroebner Basisを求める -------------------------;
gb:=groebner{h1, h2, h3, h4, h5};

%---------------------------------------------------------;
% 「glterms」が出力するのは、グレブナー基底の計算過程で〈ゼロにはならない〉
% と仮定された式のリストである。
%---------------------------------------------------------;

%%% u に関する制約条件 --------------------------------------------------;
glterms;


%%% gbを法としてgを簡約 --------------------------------------------------;
preduce(conclusion, gb);

% ==> 0 になっていれば、定理は成立 ------------------------------------------;

showtime;
;end;